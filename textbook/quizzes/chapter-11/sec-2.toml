[[question]]

prompt = "When designing a recursive function for solving a problem, which of the following factors should be determined?"

answer = [0, 1, 2, 3]

distractors = [
    "The terminating condition.",
    "The size of input.",
    "How to break down the problem into smaller subproblems.",
    "The number of recursive calls in the worst case."
]

explainations = [
    "A is correct. The terminating condition is the base case of the recursive function.",
    "B is correct. If the size of input is too large, it may cause stack overflow as the input arguments are pushed onto the stack.",
    "C is correct. The problem should be broken down into smaller subproblems in each recursive call.",
    "D is correct. The number of recursive calls in the worst case should be determined to ensure that the recursive function will terminate before stack overflow occurs."
]

[[questions]]

prompt = '''
In the example mentioned in 11.2.4, if modify the given recursive function to the following:
```
void printPattern(int n) {
    if (n > 0) {
        printRow(n);
        printPattern(n - 1);
        printRow(n);
        printPattern(n - 1);
        printRow(n);
    }
}
```
What will be output when user input 3? (Other code is the same as the example.)
'''

answer = [1]

distractors = [
'''
```
*
**
***
**
*
*
**
***
**
*
*
*
**
***
**
*
*
**
***
**
*
```
''',
'''
```
***
**
*
*
*
**
*
*
*
**
***
**
*
*
*
**
*
*
*
**
***
```
''',
'''
```
*
**
***
**
*
*
*
**
*
*
***
*
*
**
*
*
*
**
***
**
*
```
''',
'''
```
***
**
*
*
*
**
***
**
*
*
***
*
*
**
***
**
*
*
*
**
***
```
'''
]

explainations = [
    "A is incorrect. Each time the recursive function is called, it will print 3 rows of `n` stars, two of them are at the top and bottom of the pattern, and the other one is in the middle of the pattern. In option B, the (1st, 11st, 21st) lines are firstly printed; then the (2nd, 6th, 10th) and (12th, 16th, 20th) lines are printed; finally (3rd, 4th, 5th), (7th, 8th, 9th), (13th, 14th, 15th) and (17th, 18th, 19th) lines are printed.",
    "B is correct. Each time the recursive function is called, it will print 3 rows of `n` stars, two of them are at the top and bottom of the pattern, and the other one is in the middle of the pattern. In option B, the (1st, 11st, 21st) lines are firstly printed; then the (2nd, 6th, 10th) and (12th, 16th, 20th) lines are printed; finally (3rd, 4th, 5th), (7th, 8th, 9th), (13th, 14th, 15th) and (17th, 18th, 19th) lines are printed.",
    "C is incorrect. Each time the recursive function is called, it will print 3 rows of `n` stars, two of them are at the top and bottom of the pattern, and the other one is in the middle of the pattern. In option B, the (1st, 11st, 21st) lines are firstly printed; then the (2nd, 6th, 10th) and (12th, 16th, 20th) lines are printed; finally (3rd, 4th, 5th), (7th, 8th, 9th), (13th, 14th, 15th) and (17th, 18th, 19th) lines are printed.",
    "D is incorrect. Each time the recursive function is called, it will print 3 rows of `n` stars, two of them are at the top and bottom of the pattern, and the other one is in the middle of the pattern. In option B, the (1st, 11st, 21st) lines are firstly printed; then the (2nd, 6th, 10th) and (12th, 16th, 20th) lines are printed; finally (3rd, 4th, 5th), (7th, 8th, 9th), (13th, 14th, 15th) and (17th, 18th, 19th) lines are printed."
]